import pdb
from mininet.topo import Topo

class Assign3( Topo ):

	def __init__( self ):
               # initialize topology		
		Topo.__init__( self )
		
		S1 = self.addSwitch( 's1' )
		S2 = self.addSwitch( 's2' )
		S3 = self.addSwitch( 's3' )
		S4 = self.addSwitch( 's4' )
		S5 = self.addSwitch( 's5' )
		H1 = self.addHost( 'h1' )
		H2 = self.addHost( 'h2' )
		H3 = self.addHost( 'h3' )
		H4 = self.addHost( 'h4' )
		H5 = self.addHost( 'h5' )
		H6 = self.addHost( 'h6' )
		H7 = self.addHost( 'h7' )
		H8 = self.addHost( 'h8' )
		H9 = self.addHost( 'h9' )
		H10 = self.addHost( 'h10' )


		SwitchList = (S1,S2,S3,S4,S5)
		#for index in range( 0, len(SwitchList)):
		 #    for index2 in range( index+1,len(SwitchList)):
	#	self.addLink(SwitchList[index],SwitchList[index2])
		self.addLink(S1,S2)
		self.addLink(S1,S5)
		self.addLink(S2,S3)
		self.addLink(S3,S4)
		self.addLink(S4,S5)

		self.addLink(H1,S1)
		self.addLink(H2,S1)
		self.addLink(H3,S2)
		self.addLink(H4,S2)
		self.addLink(H5,S3)
		self.addLink(H6,S3)
		self.addLink(H7,S4)
		self.addLink(H8,S4)
		self.addLink(H9,S5)
		self.addLink(H10,S5)



topos = { 'assign3': ( lambda: Assign3() )}
